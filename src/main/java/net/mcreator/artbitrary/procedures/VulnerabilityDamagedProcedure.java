package net.mcreator.artbitrary.procedures;

import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.eventbus.api.Event;
import net.minecraftforge.event.entity.living.LivingHurtEvent;

import net.minecraft.world.level.LevelAccessor;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.entity.Entity;

import net.mcreator.artbitrary.init.ArtbitraryModMobEffects;
import net.mcreator.artbitrary.ArtbitraryMod;

import javax.annotation.Nullable;

@Mod.EventBusSubscriber
public class VulnerabilityDamagedProcedure {
	@SubscribeEvent
	public static void onEntityAttacked(LivingHurtEvent event) {
		if (event != null && event.getEntity() != null) {
			execute(event, event.getEntity().level(), event.getEntity());
		}
	}

	public static void execute(LevelAccessor world, Entity entity) {
		execute(null, world, entity);
	}

	private static void execute(@Nullable Event event, LevelAccessor world, Entity entity) {
		if (entity == null)
			return;
		double damagedone = 0;
		if (entity instanceof LivingEntity _livEnt0 && _livEnt0.hasEffect(ArtbitraryModMobEffects.VULNERABILITY.get())) {
			ArtbitraryMod.queueServerWork(1, () -> {
				entity.getPersistentData().putDouble("damagedone", ((entity instanceof LivingEntity _livEnt ? _livEnt.getMaxHealth() : -1) - (entity instanceof LivingEntity _livEnt ? _livEnt.getHealth() : -1)));
				if (entity instanceof LivingEntity _entity)
					_entity.setHealth((float) ((entity instanceof LivingEntity _livEnt ? _livEnt.getHealth() : -1) - entity.getPersistentData().getDouble("damagedone")
							* ((entity instanceof LivingEntity _livEnt && _livEnt.hasEffect(ArtbitraryModMobEffects.VULNERABILITY.get()) ? _livEnt.getEffect(ArtbitraryModMobEffects.VULNERABILITY.get()).getAmplifier() : 0) + 1)));
				entity.getPersistentData().putDouble("damagedone", 0);
			});
		}
	}
}
